<?php

namespace App\Http\Controllers;

use App\Models\UserExploit;
use Illuminate\Http\Request;
use App\Models\User;
use App\Models\Secondary;
use App\Models\Seletion;
use App\Models\Assigned;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;

class UserExploitController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('auth.login');
    }
    public function admin()
    {
        return view('admin.dashboard');
    }
    public function headTeacher()
    {
        return view('headTeacher.home');
    }
    public function pupil()
    {   
        return view('dashboard');
    }



    public function home()
    {
        $user = User::find(Auth::id());
        //dd($user);
        $sec = Secondary::all();
        $sec = Assigned::all();
        $national = DB::table('secondaries')
                ->select('*')
                ->where('level', '001')
                ->get();
        $exCounty = DB::table('secondaries')
                ->select('*')
                ->where('level', '002')
                ->get();
        $county = DB::table('secondaries')
                ->select('*')
                ->where('level', '003')
                ->get();
        $district = DB::table('secondaries')
                ->select('*')
                ->where('level', '004')
                ->get();
        $pID = DB::table('primaries')
                ->select('*')
                ->where('schoolCode', $user->primarySchoolID)
                ->get();
        $sms = DB::table('messages')
                ->select('*')
                ->where('receiver', $user->indexStaffNo)
                ->orWhere('sender', $user->indexStaffNo)
                ->get(); 
            //dd($sms);  
        $assignment = DB::table('assigneds')
                ->select('*')
                ->where('index', $user->indexStaffNo)
                ->get();
            //dd($assignment);
            if($assignment->isEmpty()){
                //echo "empyty";
                //dd("emtyyyy");\
                $placed = [];
                return view('dashboard',[
                    'national' => $national,
                    'exCounty' => $exCounty,
                    'district' => $district,
                    'county' => $county,
                    'placed' => $placed,
                    'pID'   => $pID,
                    'sms'   => $sms,
                    ]);
            }else{
            foreach($assignment as $assignment){
                //dd($assignment->secondarySchoolid);
                $placed = DB::table('secondaries')
                        ->select('*')
                        ->where('schoolCode', $assignment->secondarySchoolid)
                        ->get();
   
            //dd($type);
                return view('dashboard',[
                    'national' => $national,
                    'exCounty' => $exCounty,
                    'district' => $district,
                    'county' => $county,
                    'placed' => $placed,
                    'pID'   => $pID,
                    'sms'   => $sms,
                    ]);
            }                
        }                         
    }
    
    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }
    public function storeSelection(Request $request)
    {   
        try{
            $seletion = new Seletion();
            $users = User::find(Auth::id());
            //dd($users->indexStaffNo);
            $seletion->indexStaffNo=$users->indexStaffNo;
            $seletion->national1=$request->input('national1');
            $seletion->national2=$request->input('national2');
            //dd($seletion->national2=$request->input('national1'));
            $seletion->national3=$request->input('national3');
            $seletion->national4=$request->input('national4');
            $seletion->exCounty1=$request->input('exCounty1');
            $seletion->exCounty2=$request->input('exCounty2');
            $seletion->county1=$request->input('county1');
            $seletion->county2=$request->input('county2');
            $seletion->district1=$request->input('district1');
            $seletion->district2=$request->input('district2');
            $seletion->save();      
            return redirect()->back()->with('success', 'Selection made Succeffuly!');
        } catch (\Illuminate\Database\QueryException $e) {
 
        return redirect()->back()->with('error', "You have Already Chosen Units");
    }
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */

    public function store(Request $request)
    {
        //
    }
    public function logout(Request $request)
    {
        Auth::logout();
        $request->session()->invalidate();
        $request->session()->regenerateToken();
        return redirect('/');
    }
    /**
     * Display the specified resource.
     *
     * @param  \App\Models\UserExploit  $userExploit
     * @return \Illuminate\Http\Response
     */
    public function show(UserExploit $userExploit)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\UserExploit  $userExploit
     * @return \Illuminate\Http\Response
     */
    public function edit(UserExploit $userExploit)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\UserExploit  $userExploit
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, UserExploit $userExploit)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\UserExploit  $userExploit
     * @return \Illuminate\Http\Response
     */
    public function destroy(UserExploit $userExploit)
    {
        //
    }
}
